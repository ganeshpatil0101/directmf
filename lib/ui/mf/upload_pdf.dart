import 'dart:convert';
import 'dart:io';

import 'package:file_picker/file_picker.dart';
import 'package:flutter/material.dart';
import 'package:quiver/strings.dart';
import 'package:DirectMF/services/mf_api_service.dart';
import 'package:DirectMF/ui/common/buttons.dart';

class UploadPdf extends StatefulWidget {
  static const route = '/uploadPdf';
  @override
  _UploadPdfState createState() => _UploadPdfState();
}

class _UploadPdfState extends State<UploadPdf> {
  bool hideText = true;
  bool touched = false;
  String selectedFileName = "";
  final _formKey = GlobalKey<FormState>();

  var passController = TextEditingController();
  File file;
  @override
  Widget build(BuildContext context) {
    var padding = const EdgeInsets.fromLTRB(16.0, 5.0, 16.0, 5.0);
    return Scaffold(
        appBar: AppBar(
          backgroundColor: Theme.of(context).backgroundColor,
          title: Text('Upload NSDL or CDSL '),
        ),
        body: Scrollbar(
            child: Form(
          key: _formKey,
          child: ListView(
              physics: BouncingScrollPhysics(),
              shrinkWrap: true,
              padding: EdgeInsets.all(8.0),
              children: <Widget>[
                Padding(
                    padding: padding,
                    child: Center(
                      child: Text(
                        'We Support NSDL and CDSL consolidated PDF statements generated by CAMS, ',
                        style: Theme.of(context).textTheme.body1,
                      ),
                    )),
                Padding(
                  padding: padding,
                  child: Center(
                    child: Text(
                        'Please Upload PDF Statement along with Password',
                        style: Theme.of(context).textTheme.body1),
                  ),
                ),
                Row(children: <Widget>[
                  Expanded(child: Divider()),
                ]),
                Padding(
                    padding: const EdgeInsets.all(16.0),
                    child: RoundedButton(
                      text: "Select File",
                      onPressed: _chooseFile,
                    )),
                (this.selectedFileName != "")
                    ? Padding(
                        padding: const EdgeInsets.all(0),
                        child: Center(
                          child: Text(this.selectedFileName),
                        ),
                      )
                    : Text(""),
                Padding(
                  padding: const EdgeInsets.fromLTRB(28.0, 15.0, 28.0, 5.0),
                  child: TextFormField(
                      // key: ValueKey("Pdf Password"),
                      controller: passController,
                      maxLines: 1,
                      obscureText: hideText,
                      autofocus: false,
                      onChanged: (String value) => setState(() {
                            this.touched = isNotEmpty(value);
                          }),
                      validator: (value) => _validatePassword(value),
                      decoration: InputDecoration(
                        hintText: "Enter PDF Password ",
                        labelText: "Password",
                        border: OutlineInputBorder(),
                        suffixIcon: InkWell(
                          child: Icon(
                            Icons.remove_red_eye,
                            color: hideText ? Colors.grey : Colors.blue,
                          ),
                          onTap: () => setState(() {
                            this.hideText = !hideText;
                          }),
                        ),
                      )),
                ),
                Padding(
                    padding: EdgeInsets.all(16.0),
                    child: RoundedButton(
                      onPressed: () {
                        //if (passController.text != "") {
                        uploadFile();
                        //} else {
                        //final snackBar =
                        //  SnackBar(content: Text("password is mandatory"));
                        //Scaffold.of(context).showSnackBar(snackBar);
                        //}
                      },
                      text: "Upload Pdf",
                    ))
              ]),
        )));
  }

  _chooseFile() async {
    try {
      file =
          await FilePicker.getFile(type: FileType.CUSTOM, fileExtension: 'pdf');
      this.setState(() {
        var arr = file.path.split("/");
        this.selectedFileName = arr[arr.length - 1];
      });
    } catch (e) {
      print(e);
    }
  }

  uploadFile() {
    if (_formKey.currentState.validate() && file.path != "") {
      //_formKey.currentState.save();
      MfApiService.upload_Pdf(file.path, passController.text).then((res) {
        print('success ----> $res');
        // TODO
        // Parse And SAVE MF Entries to DB
      }).catchError((err) {
        print('error ---> $err');
      });
    }
  }

  String _validatePassword(String password) {
    if (password.isEmpty) {
      return "Password field cannot be empty";
    } else if (password.length < 6) {
      return "Password should contain at least 6 symbols";
    }
    return null;
  }
}
